name: 'Terraform CI/CD'

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./terraform
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # This is a simple, stateless init
      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
```

**3. Push These Changes**

Commit and push both the file rename and the workflow change.

```bash
git add .
git commit -m "TEMP: Stateless run to create backend resources"
git push origin main
```

Now, go to the "Actions" tab on GitHub. **Wait for this pipeline to run and complete successfully.** It will build your resource group, your `stsportsanalytics12345` storage account, and all your other resources.

---

### Stage 2: Enable the Backend (Stateful Run)

Now that the storage account *actually exists*, we can tell Terraform to use it.

**1. Rename the Backend File Back**

On your local machine, run this command to re-enable your `backend.tf` file:

```bash
git mv terraform/backend.tf.bak terraform/backend.tf
